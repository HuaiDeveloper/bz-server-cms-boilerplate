<MudAppBar Color="Color.Primary" Fixed="true" Dense="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText Typo="Typo.h5" Class="ml-3">Boobstrap</MudText>
    <MudSpacer />
    <AuthorizeView>
        <Authorized>
            @* <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" Edge="Edge.End" /> *@
            <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End"
                           OnClick="ToSignOut" />
        </Authorized>
        <NotAuthorized>
            <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Edge="Edge.End"
                           OnClick="ToSignIn" />
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>
<MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always">
    <NavMenu/>
</MudDrawer>


@code {

    [Inject] private NavigationManager _navigationManager { get; set; } = null!;

    private void ToSignIn()
    {
        _navigationManager.NavigateTo("/auth/sign-in", forceLoad: true);
    }

    private void ToSignOut()
    {
        _navigationManager.NavigateTo("/auth/sign-out", forceLoad: true);
    }

    bool _drawerOpen = true;
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
